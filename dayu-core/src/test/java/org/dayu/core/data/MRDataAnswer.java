package org.dayu.core.data;

import java.net.URL;
import org.mockito.invocation.InvocationOnMock;
import org.mockito.stubbing.Answer;

/**
 * @author Sean Liu
 * @date 2019-07-23
 */
public class MRDataAnswer implements Answer<String> {

  private static final String jobInfo = "{\n"
      + "   \"job\" : {\n"
      + "      \"submitTime\":  1326381446500,\n"
      + "      \"avgReduceTime\" : 124961,\n"
      + "      \"failedReduceAttempts\" : 0,\n"
      + "      \"state\" : \"SUCCEEDED\",\n"
      + "      \"successfulReduceAttempts\" : 1,\n"
      + "      \"acls\" : [\n"
      + "         {\n"
      + "            \"value\" : \" \",\n"
      + "            \"name\" : \"mapreduce.job.acl-modify-job\"\n"
      + "         },\n"
      + "         {\n"
      + "            \"value\" : \" \",\n"
      + "            \"name\" : \"mapreduce.job.acl-view-job\"\n"
      + "         }\n"
      + "      ],\n"
      + "      \"user\" : \"user1\",\n"
      + "      \"reducesTotal\" : 1,\n"
      + "      \"mapsCompleted\" : 1,\n"
      + "      \"startTime\" : 1326381446529,\n"
      + "      \"id\" : \"job_1326381300833_2_2\",\n"
      + "      \"avgMapTime\" : 2638,\n"
      + "      \"successfulMapAttempts\" : 1,\n"
      + "      \"name\" : \"Sleep job\",\n"
      + "      \"avgShuffleTime\" : 2540,\n"
      + "      \"reducesCompleted\" : 1,\n"
      + "      \"diagnostics\" : \"\",\n"
      + "      \"failedMapAttempts\" : 0,\n"
      + "      \"avgMergeTime\" : 2589,\n"
      + "      \"killedReduceAttempts\" : 0,\n"
      + "      \"mapsTotal\" : 1,\n"
      + "      \"queue\" : \"default\",\n"
      + "      \"uberized\" : false,\n"
      + "      \"killedMapAttempts\" : 0,\n"
      + "      \"finishTime\" : 1326381582106\n"
      + "   }\n"
      + "}";

  private static final String jobAttempts = "{\n"
      + "   \"jobAttempts\" : {\n"
      + "      \"jobAttempt\" : [\n"
      + "         {\n"
      + "            \"nodeId\" : \"host.domain.com:8041\",\n"
      + "            \"nodeHttpAddress\" : \"host.domain.com:8042\",\n"
      + "            \"startTime\" : 1326381444693,\n"
      + "            \"id\" : 1,\n"
      + "            \"logsLink\" : \"http://host.domain.com:19888/jobhistory/logs/host.domain.com:8041/container_1326381300833_0002_01_000001/job_1326381300833_2_2/user1\",\n"
      + "            \"containerId\" : \"container_1326381300833_0002_01_000001\"\n"
      + "         }\n"
      + "      ]\n"
      + "   }\n"
      + "}";

  private static final String jobCounter = "{\n"
      + "    \"jobCounters\" : {\n"
      + "       \"id\" : \"job_1326381300833_2_2\",\n"
      + "       \"counterGroup\" : [\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"Shuffle Errors\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"reduceCounterValue\" : 0,\n"
      + "                   \"mapCounterValue\" : 0,\n"
      + "                   \"totalCounterValue\" : 0,\n"
      + "                   \"name\" : \"BAD_ID\"\n"
      + "                },\n"
      + "                {\n"
      + "                   \"reduceCounterValue\" : 0,\n"
      + "                   \"mapCounterValue\" : 0,\n"
      + "                   \"totalCounterValue\" : 0,\n"
      + "                   \"name\" : \"CONNECTION\"\n"
      + "                }\n"
      + "             ]\n"
      + "           },\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"org.apache.hadoop.mapreduce.FileSystemCounter\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"reduceCounterValue\" : 0,\n"
      + "                   \"mapCounterValue\" : 0,\n"
      + "                   \"totalCounterValue\" : 2483,\n"
      + "                   \"name\" : \"FILE_BYTES_READ\"\n"
      + "                },\n"
      + "                {\n"
      + "                   \"reduceCounterValue\" : 0,\n"
      + "                   \"mapCounterValue\" : 0,\n"
      + "                   \"totalCounterValue\" : 108525,\n"
      + "                   \"name\" : \"FILE_BYTES_WRITTEN\"\n"
      + "                }\n"
      + "             ]\n"
      + "          },\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"org.apache.hadoop.mapreduce.TaskCounter\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"reduceCounterValue\" : 0,\n"
      + "                   \"mapCounterValue\" : 0,\n"
      + "                   \"totalCounterValue\" : 1,\n"
      + "                   \"name\" : \"MAP_INPUT_RECORDS\"\n"
      + "                },\n"
      + "                {\n"
      + "                   \"reduceCounterValue\" : 0,\n"
      + "                   \"mapCounterValue\" : 0,\n"
      + "                   \"totalCounterValue\" : 1200,\n"
      + "                   \"name\" : \"MAP_OUTPUT_RECORDS\"\n"
      + "                }\n"
      + "             ]\n"
      + "          },\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"org.apache.hadoop.mapreduce.lib.input.FileInputFormatCounter\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"reduceCounterValue\" : 0,\n"
      + "                   \"mapCounterValue\" : 0,\n"
      + "                   \"totalCounterValue\" : 0,\n"
      + "                   \"name\" : \"BYTES_READ\"\n"
      + "                }\n"
      + "             ]\n"
      + "          },\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"org.apache.hadoop.mapreduce.lib.output.FileOutputFormatCounter\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"reduceCounterValue\" : 0,\n"
      + "                   \"mapCounterValue\" : 0,\n"
      + "                   \"totalCounterValue\" : 0,\n"
      + "                   \"name\" : \"BYTES_WRITTEN\"\n"
      + "                }\n"
      + "             ]\n"
      + "          }\n"
      + "       ]\n"
      + "    }\n"
      + " }";

  private static final String jobConf = "{\n"
      + "    \"conf\" : {\n"
      + "       \"path\" : \"hdfs://host.domain.com:9000/user/user1/.staging/job_1326381300833_0002/job.xml\",\n"
      + "       \"property\" : [\n"
      + "          {  \n"
      + "             \"value\" : \"/home/hadoop/hdfs/data\",\n"
      + "             \"name\" : \"dfs.datanode.data.dir\",\n"
      + "             \"source\" : [\"hdfs-site.xml\", \"job.xml\"]\n"
      + "          },\n"
      + "          {\n"
      + "             \"value\" : \"org.apache.hadoop.yarn.server.webproxy.amfilter.AmFilterInitializer\",\n"
      + "             \"name\" : \"hadoop.http.filter.initializers\",\n"
      + "             \"source\" : [\"programatically\", \"job.xml\"]\n"
      + "          },\n"
      + "          {\n"
      + "             \"value\" : \"/home/hadoop/tmp\",\n"
      + "             \"name\" : \"mapreduce.cluster.temp.dir\",\n"
      + "             \"source\" : [\"mapred-site.xml\"]\n"
      + "          }\n"
      + "       ]\n"
      + "    }\n"
      + " }";

  private static final String tasks = "{\n"
      + "   \"tasks\" : {\n"
      + "      \"task\" : [\n"
      + "         {\n"
      + "            \"progress\" : 100,\n"
      + "            \"elapsedTime\" : 6777,\n"
      + "            \"state\" : \"SUCCEEDED\",\n"
      + "            \"startTime\" : 1326381446541,\n"
      + "            \"id\" : \"task_1326381300833_2_2_m_0\",\n"
      + "            \"type\" : \"MAP\",\n"
      + "            \"successfulAttempt\" : \"attempt_1326381300833_2_2_m_0_0\",\n"
      + "            \"finishTime\" : 1326381453318\n"
      + "         },\n"
      + "         {\n"
      + "            \"progress\" : 100,\n"
      + "            \"elapsedTime\" : 135559,\n"
      + "            \"state\" : \"SUCCEEDED\",\n"
      + "            \"startTime\" : 1326381446544,\n"
      + "            \"id\" : \"task_1326381300833_2_2_r_0\",\n"
      + "            \"type\" : \"REDUCE\",\n"
      + "            \"successfulAttempt\" : \"attempt_1326381300833_2_2_r_0_0\",\n"
      + "            \"finishTime\" : 1326381582103\n"
      + "         }\n"
      + "      ]\n"
      + "   }\n"
      + "}";

  private static final String taskCounter = "{\n"
      + "    \"jobTaskCounters\" : {\n"
      + "       \"id\" : \"task_1326381300833_2_2_m_0\",\n"
      + "       \"taskCounterGroup\" : [\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"org.apache.hadoop.mapreduce.FileSystemCounter\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"value\" : 2363,\n"
      + "                   \"name\" : \"FILE_BYTES_READ\"\n"
      + "                },\n"
      + "                {\n"
      + "                   \"value\" : 54372,\n"
      + "                   \"name\" : \"FILE_BYTES_WRITTEN\"\n"
      + "                }\n"
      + "             ]\n"
      + "          },\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"org.apache.hadoop.mapreduce.TaskCounter\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"value\" : 0,\n"
      + "                   \"name\" : \"COMBINE_INPUT_RECORDS\"\n"
      + "                },\n"
      + "                {\n"
      + "                   \"value\" : 0,\n"
      + "                   \"name\" : \"COMBINE_OUTPUT_RECORDS\"\n"
      + "                }\n"
      + "             ]\n"
      + "          },\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"Shuffle Errors\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"value\" : 0,\n"
      + "                   \"name\" : \"BAD_ID\"\n"
      + "                },\n"
      + "                {\n"
      + "                   \"value\" : 0,\n"
      + "                   \"name\" : \"CONNECTION\"\n"
      + "                }\n"
      + "             ]\n"
      + "          },\n"
      + "          {\n"
      + "             \"counterGroupName\" : \"org.apache.hadoop.mapreduce.lib.output.FileOutputFormatCounter\",\n"
      + "             \"counter\" : [\n"
      + "                {\n"
      + "                   \"value\" : 0,\n"
      + "                   \"name\" : \"BYTES_WRITTEN\"\n"
      + "                }\n"
      + "             ]\n"
      + "          }\n"
      + "       ]\n"
      + "    }\n"
      + " }";

  private static final String taskAttempts = "{\n"
      + "   \"taskAttempts\" : {\n"
      + "      \"taskAttempt\" : [\n"
      + "         {\n"
      + "            \"assignedContainerId\" : \"container_1326381300833_0002_01_000002\",\n"
      + "            \"progress\" : 100,\n"
      + "            \"elapsedTime\" : 2638,\n"
      + "            \"state\" : \"SUCCEEDED\",\n"
      + "            \"diagnostics\" : \"\",\n"
      + "            \"rack\" : \"/98.139.92.0\",\n"
      + "            \"nodeHttpAddress\" : \"host.domain.com:8042\",\n"
      + "            \"startTime\" : 1326381450680,\n"
      + "            \"id\" : \"attempt_1326381300833_2_2_m_0_0\",\n"
      + "            \"type\" : \"MAP\",\n"
      + "            \"finishTime\" : 1326381453318\n"
      + "         }\n"
      + "      ]\n"
      + "   }\n"
      + "}";

  @Override
  public String answer(InvocationOnMock invocation) throws Throwable {
    String arg0 = invocation.getArgument(0);
    URL url = new URL(arg0);
    String subPath = url.getPath().substring(31);

    /**
     * /ws/v1/history/mapreduce/jobs/%s
     * /ws/v1/history/mapreduce/jobs/%s/conf
     * /ws/v1/history/mapreduce/jobs/%s/jobattempts
     * /ws/v1/history/mapreduce/jobs/%s/counters
     * /ws/v1/history/mapreduce/jobs/%s/tasks
     * /ws/v1/history/mapreduce/jobs/%s/tasks/%s/counters
     * /ws/v1/history/mapreduce/jobs/%s/tasks/%s/attempts
     */
    if (!subPath.contains("/")) {
      return jobInfo;
    } else if (subPath.endsWith("conf")) {
      return jobConf;
    } else if (subPath.endsWith("jobattempts")) {
      return jobAttempts;
    } else if (subPath.endsWith("tasks")) {
      return tasks;
    } else if (subPath.endsWith("/attempts")) {
      return taskAttempts;
    } else if (subPath.contains("tasks")) {
      return taskCounter;
    } else {
      return jobCounter;
    }
  }
}
